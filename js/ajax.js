document.addEventListener("DOMContentLoaded", function () {
    fetchData(); // Adatok bet√∂lt√©se az oldal megnyit√°sakor
});

const API_URL = "http://gamf.nhely.hu/ajax2/";
const CODE = "HI20V9abcd"; // Saj√°t azonos√≠t√≥ (Neptun + egy√©ni k√≥d)

// üîπ 1. ADATOK LEK√âR√âSE √âS MEGJELEN√çT√âSE
function fetchData() {
    let formData = new FormData();
    formData.append("op", "read");
    formData.append("code", CODE);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        let tableBody = document.querySelector("#ajaxtable tbody");
        tableBody.innerHTML = ""; // El≈ëz≈ë adatok t√∂rl√©se

        if (!data.list || data.list.length === 0) {
            tableBody.innerHTML = "<tr><td colspan='5'>Nincsenek adatok!</td></tr>";
            return;
        }

        data.list.forEach(record => {
            let row = `
                <tr>
                    <td>${record.id}</td>
                    <td>${record.name}</td>
                    <td>${record.height}</td>
                    <td>${record.weight}</td>
                    <td>
                        <button onclick="deleteData(${record.id})" class="delete-button">üóëÔ∏è</button>
                    </td>
                </tr>
            `;
            tableBody.innerHTML += row;
        });
        
    })
    .catch(error => {
        console.error("Hiba az adatok lek√©r√©sekor:", error);
        alert("Hiba t√∂rt√©nt az adatok lek√©r√©se k√∂zben!");
    });
}


// üîπ 2. √öJ ADAT L√âTREHOZ√ÅSA
function createData() {
    let name = document.getElementById("createName").value.trim();
    let height = document.getElementById("createHeight").value.trim();
    let weight = document.getElementById("createWeight").value.trim();

    if (name === "" || height === "" || weight === "") {
        alert("Minden mez≈ët ki kell t√∂lteni!");
        return;
    }

    let formData = new FormData();
    formData.append("op", "create");
    formData.append("name", name);
    formData.append("height", height);
    formData.append("weight", weight);
    formData.append("code", CODE);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.text()) 
    .then(data => {
        let cleanedData = data.trim();
        console.log("üîπ API teljes v√°lasz:", JSON.stringify(cleanedData)); // Debug

        if (cleanedData === "1") {  
            alert("‚úÖ Sikeresen hozz√°adva!");
            fetchData();
        } else {
            alert("‚ùå Hiba t√∂rt√©nt az adatok ment√©sekor! API v√°lasz: " + cleanedData);
            console.error("‚ùå Ismeretlen API v√°lasz:", cleanedData);
        }
    })
    .catch(error => {
        console.error("‚ö†Ô∏è Hiba:", error);
    });
}



// üîπ 3. ADAT M√ìDOS√çT√ÅSA
function updateData() {
    let id = document.getElementById("updateId").value.trim();
    let name = document.getElementById("updateName").value.trim();
    let height = document.getElementById("updateHeight").value.trim();
    let weight = document.getElementById("updateWeight").value.trim();

    if (id === "" || name === "" || height === "" || weight === "") {
        alert("Minden mez≈ët ki kell t√∂lteni!");
        return;
    }

    let formData = new FormData();
    formData.append("op", "update");
    formData.append("id", id);
    formData.append("name", name);
    formData.append("height", height);
    formData.append("weight", weight);
    formData.append("code", CODE);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.text()) // JSON helyett sima sz√∂veg
    .then(data => {
        console.log("API v√°lasz:", data);

        if (data.trim() === "1") {
            alert("Sikeres m√≥dos√≠t√°s!");
            fetchData();
        } else {
            alert("Hiba t√∂rt√©nt a m√≥dos√≠t√°skor!");
        }
    })
    .catch(error => console.error("Hiba:", error));
}


// üîπ 4. ADAT T√ñRL√âSE
function deleteData(id) {
    if (!confirm("Biztosan t√∂rl√∂d az ID " + id + " rekordot?")) return;

    let formData = new FormData();
    formData.append("op", "delete");
    formData.append("id", id);
    formData.append("code", CODE);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.text()) // JSON helyett sima sz√∂veg
    .then(data => {
        console.log("API v√°lasz:", data);

        if (data.trim() === "1") {
            alert("Sikeresen t√∂r√∂lve!");
            fetchData();
        } else {
            alert("Hiba t√∂rt√©nt a t√∂rl√©skor!");
        }
    })
    .catch(error => console.error("Hiba:", error));
}
function getDataForId() {
    let id = document.getElementById("updateId").value.trim();

    if (!id) {
        alert("K√©rlek, adj meg egy ID-t a lek√©rdez√©shez!");
        return;
    }

    let formData = new FormData();
    formData.append("op", "read");
    formData.append("code", CODE);

    fetch(API_URL, {
        method: "POST",
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        console.log("API v√°lasz:", data); // Ellen≈ërz√©s

        if (!data.list || data.list.length === 0) {
            alert("Nincsenek el√©rhet≈ë adatok!");
            return;
        }

        let found = data.list.find(item => item.id == id);
        if (found) {
            document.getElementById("updateName").value = found.name;
            document.getElementById("updateHeight").value = found.height;
            document.getElementById("updateWeight").value = found.weight;
        } else {
            alert("Nem tal√°lhat√≥ ilyen ID!");
        }
    })
    .catch(error => {
        console.error("Lek√©rdez√©si hiba:", error);
        alert("Hiba t√∂rt√©nt az adatok lek√©r√©se k√∂zben!");
    });
}